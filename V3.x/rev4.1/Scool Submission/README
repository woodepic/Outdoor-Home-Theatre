// =========================================================
// Name:   Matthew Wood
// Id:     1573807
// Collaborators: None (I got an exception)
//
// Course:          CMPUT 275, Winter 2020
// 
// Assignment:      Final Project
// =========================================================


References: How to use dallas Temperature Library: https://gist.github.com/brooksware2000/3628594
            How to implement PID: https://www.youtube.com/watch?v=JVqJ7uRGwoA
		    					  https://www.youtube.com/watch?v=JEpWlTl95Tw&list=WL&index=268&t=0s


Included Files:

	* projector.cpp
	* README
	(makefile intentionally not included see notes)


Wiring Instructions:
	 Heater:
	 	* splice in the hot wire into the common and N.O. terminals on the relay
	 	* connect relay pin to D10

	 Air Conditioner:
	 	* splice in the hot wire into the common and N.O. terminals on the relay
	 	* connect relay pin to D12

	 Exhaust Fan:
	 	* splice in the hot wire into the common and N.O. terminals on the relay
	 	* connect relay pin to D8

	 Servo:
	 	* red wire <--> Arduino 5v
	 	* black wire <--> Arduino GND
	 	* Yellow wire <--> Arduino D4

	 Relay:
	 	*activation pins to digital pins as described above
	 	* 5v <--> arduino 5v
	 	* GND <--> arduino GND

	Temp Sensors:
		* red wire <--> Arduino 5v
	 	* black wire <--> Arduino GND
	 	* Yellow wire <--> Arduino D13


Running Instructions:
	1. Compile the code, and upload to board. 
	2. Once code is uploaded to the board, the board does not need to be connected to the computer. Any 5v usb source is fine.

Description:
	* This Final project consists of an arduino-based temperature regulation system. There are 4 temp sensors, and an exhaust fan, an air conditioner, and a heater. The arduino uses a PID based algorithm to calculate the level of heating/cooling desired. Since my heater, ac and fan cannot take in a variable signal (instead they're simply on/off) I also set criteria based on the PID controlled signal regarding when to turn on and off. There is also a servo controlled air vent to help with insulating when heating. (see video).

Notes:
	* The program was uploaded to an arduino nano, I couldn't get the provided makefile (the one we used for the arduino mega) to work properly. Instead I had to use the arduino IDE to upload unfortunately

	* While I implemented a working PID controller, It didn't prove to be all that useful since I am unable to control the levels of heating / cooling. I built in cases which decide what level of output correspond to what happening, but it is a rather indirect way of approaching this. Perhaps later down the road I will modify the fans/heater/ac to accept a PWM signal, and we can fully make use of the PID control. 

	* It is not very good to have fans starting up and stopping regularly. It wears out the fans (and compressor on the AC) and it is an irritating sound to the person watching the movie. To combat this, I implemented a method of keeping the ac/fan/heater on longer than they needed to be, as that sets us up to be in a good position. Ex. when we are cooling with AC, run it a little longer than needed since we will inevitably heat back up again.


Known Bugs/Errors/Possible Improvements:
	* Improve the servo actuation method to avoid slowing the entire program as we are opening/shutting the vent

	*Perhaps down the road I'll add a wifi module to remotely report temperatures via a web server

	
	
	
	

